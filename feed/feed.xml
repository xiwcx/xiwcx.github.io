<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>welchcanavan.com</title>
		<description>The personal website of I. Welch Canavan</description>
		<link>http://welchcanavan.com</link>
		<atom:link href="http://welchcanavan.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>A Punk Handbill for the Twenty-first Century with SVG</title>
				<description>&lt;p&gt;Making fliers for my high school punk bands is probably the first step I took on the path to becoming a web developer. Since it was the early two thousands I pieced together a working knowledge of photoshop instead of cutting up my parent&amp;#39;s magazines. I really enjoyed being self sufficient so when it came time to make the bands&amp;#39; websites I struggled through figuring that out as well.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s been a while since I&amp;#39;ve booked a show, but I couldn&amp;#39;t pass up the opportunity when &lt;a href=&quot;http://wearedangers.com&quot;&gt;Dangers&lt;/a&gt; said they were looking for help with east coast dates. Since it had also been a while since I&amp;#39;d made my own flyer I wanted to try out a technique I&amp;#39;d been contemplating for a while: animated handbills made with &lt;a href=&quot;http://en.wikipedia.org/wiki/Scalable_Vector_Graphics&quot;&gt;SVG&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&quot;height:0;padding-bottom:130%;position:relative;overflow:hidden&quot;&gt;
  &lt;iframe src=&quot;http://welchcanavan.com/dngrs-grf/&quot; frameBorder=&quot;0&quot; style=&quot;position:absolute;height:100%;left:0;top:0;width:100%&quot;&gt;
    &lt;img src=&quot;http://welchcanavan.com/dngrs-grf/2014-08-09-dngrs-grf.jpg&quot;&gt;
  &lt;/iframe&gt;
  &lt;a href=&quot;http://xiw.cx/dngrs-grf&quot; style=&quot;position:absolute;height:45%;left:0;top:0;width:100%&quot;&gt;&amp;nbsp;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;You can grab the embed code here:&lt;/p&gt;

&lt;p&gt;&lt;textarea style=&quot;resize:none&quot; rows=&quot;4&quot; onclick=&quot;this.focus();this.select()&quot; wrap=&quot;off&quot; readonly=&quot;readonly&quot;&gt;&lt;div style=&quot;height:0;padding-bottom:130%;position:relative;overflow:hidden&quot;&gt;
  &lt;iframe src=&quot;http://welchcanavan.com/dngrs-grf/&quot; frameBorder=&quot;0&quot; style=&quot;position:absolute;height:100%;left:0;top:0;width:100%&quot;&gt;
    &lt;img src=&quot;http://welchcanavan.com/dngrs-grf/2014-08-09-dngrs-grf.jpg&quot;&gt;
  &lt;/iframe&gt;
  &lt;a href=&quot;http://xiw.cx/dngrs-grf&quot; style=&quot;position:absolute;height:45%;left:0;top:0;width:100%&quot;&gt;&amp;nbsp;&lt;/a&gt;
&lt;/div&gt;&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;In sci-fi movies animated advertisements are loud and obnoxious, but I wanted to try a subtler effect for my first attempt at this technique. After mulling the idea over with my lovely fianc&amp;#232;, &lt;a href=&quot;https://twitter.com/hannahxrene&quot;&gt;Hannah&lt;/a&gt;, she helped me figure out a design that would work and generously drew up the antlers since I can&amp;#39;t illustrate my way out of a wet paper bag. The layering of the transparent antlers being both &amp;#8220;below&amp;#8221; and &amp;#8220;above&amp;#8221; the color pulsating band names was something that came out of our brainstorming.&lt;/p&gt;

&lt;p&gt;It took a good amount of guessing and checking, but thanks to &lt;a href=&quot;http://codepen.io/xiwcx/pen/pEgHD?editors=110&quot;&gt;codepen&lt;/a&gt; (where you can check out the unminified, unprocessed code) that process was made much quicker.&lt;/p&gt;

&lt;p&gt;Sure, the animation could have been done with a GIF, but I think SVG offers some serious advantages:&lt;/p&gt;

&lt;h2&gt;Selectable text&lt;/h2&gt;

&lt;p&gt;While it might have been slightly more performant to convert the text to outlines I decided to go with SVG &lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt; as demonstrated in &lt;a href=&quot;http://css-tricks.com/svg-text-typographic-designs/&quot;&gt;Chris Coyier&amp;#39;s article&lt;/a&gt; on the technique. While it did increase the overall size, I&amp;#39;m not sweating it as the entire thing is &amp;#8776;70K over the wire. The real bonus of doing this is that someone can copy the info right off of the flyer in to their calender or a social platform.&lt;/p&gt;

&lt;h2&gt;Responsiveness&lt;/h2&gt;

&lt;p&gt;I had read about &lt;a href=&quot;http://timkadlec.com/2013/04/media-queries-within-svg/&quot;&gt;Media Queries Within SVG&lt;/a&gt;, but never had a real world need to try them out until now. The handbill&amp;#39;s details (location, date...) are larger when the handbill renders smaller so that they&amp;#39;ll be legible on small screens and smaller when the handbill renders larger so they have more room to breathe.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sass language-sass&quot; data-lang=&quot;sass&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.details&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;243&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;419&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;50em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;253&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;459&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An interesting quirk I found is that SVG won&amp;#39;t rerender when the window resizes, you need to do a full refresh to see the result. Hit me up if I&amp;#39;m wrong or you know a way around this.&lt;/p&gt;

&lt;h2&gt;Flexibility&lt;/h2&gt;

&lt;p&gt;I wrote up a little chunk of &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; to power the animation so that I could quickly change the number of gradient panels and the length of the entire animation.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sass language-sass&quot; data-lang=&quot;sass&quot;&gt;&lt;span class=&quot;na&quot;&gt;$gradient-total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;$gradient-time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;$gradient-total-time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gradient-total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gradient-time&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;gradient&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;opacity&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gradient-total-time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinite&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;through&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gradient-total&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nc&quot;&gt;.gradient--&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@extend&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;gradient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;animation-delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gradient-time&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Downsides&lt;/h2&gt;

&lt;p&gt;There&amp;#39;s really not that many places you can share this. I knew Facebook and Twitter wouldn&amp;#39;t play nice with something like this, but I was disheartened to find that even Tumblr mangles the iframe embed beyond repair. For now this solution will only work if you run your own blog or have access to the source code for your web page.&lt;/p&gt;

&lt;p&gt;At the moment, this is barely more than a proof of concept. I&amp;#39;d love to see what people do with the concept (especially those with actual design and illustration chops). Try out the embed code and let me know if and where it works!&lt;/p&gt;
</description>
				<pubDate>Mon, 21 Jul 2014 00:00:00 -0400</pubDate>
				
        <link>http://xiw.cx/1qx11iZ</link>
				<guid isPermaLink="true">http://xiw.cx/1qx11iZ</guid>
			</item>
		
			<item>
				<title>remainder</title>
				<description>&lt;p&gt;A few years ago some close friends and I started &lt;a href=&quot;remaindersongs.bandcamp.com&quot;&gt;a band named remainder&lt;/a&gt;. We were always spread across two or three cities, but for a good while it was well worth the effort. Eventually we grew tired of the distance and without any real climax the band just petered out.&lt;/p&gt;

&lt;p&gt;One of the last things we did was record all of the instruments for a four song EP in October of 2011. We never recorded the vocals and the songs sat unfinished for three years. We finally recorded the vocals in March of this year as a birthday gift for our drummer and beloved friend&amp;#39;s 29th birthday (today, July 12, 2014). Despite a mad dash to release the record on his birthday it turns out that releasing a record takes a really long time, especially if you&amp;#39;ve never released one before, but we can finally share the songs.&lt;/p&gt;

&lt;iframe style=&quot;border: 0; width: 100%; height: 120px;&quot; src=&quot;http://bandcamp.com/EmbeddedPlayer/album=4096844278/size=large/bgcol=ffffff/linkcol=333333/tracklist=false/artwork=small/transparent=true/&quot; seamless&gt;&lt;a href=&quot;http://remaindersongs.bandcamp.com/album/remainder&quot;&gt;remainder by remainder&lt;/a&gt;&lt;/iframe&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://www.facebook.com/braddockhitfactory&quot;&gt;David Rosenstraus&lt;/a&gt; for recording it, &lt;a href=&quot;http://www.bobcooperproducer.com/&quot;&gt;Bob Cooper&lt;/a&gt; for producing it, and &lt;a href=&quot;http://www.katelarue.com/&quot;&gt;Kate Larue&lt;/a&gt; for designing it. We&amp;#39;re very fortunate to have such talented friends.&lt;/p&gt;

&lt;p&gt;It looks like the record will come out some time this fall and we&amp;#39;re looking forward to playing a single show for it&amp;#39;s release. We hope you enjoy it. Better late than never.&lt;/p&gt;
</description>
				<pubDate>Sat, 12 Jul 2014 00:00:00 -0400</pubDate>
				
        <link>http://xiw.cx/1zoa73s</link>
				<guid isPermaLink="true">http://xiw.cx/1zoa73s</guid>
			</item>
		
			<item>
				<title>Styleguide Generator Roundup</title>
				<description>&lt;p&gt;Styleguides for websites are by no means a &lt;a href=&quot;http://24ways.org/2011/front-end-style-guides/&quot;&gt;new idea&lt;/a&gt;, but they are more easily talked about than implemented, which is why people are &lt;a href=&quot;http://alistapart.com/article/creating-style-guides&quot;&gt;still advocating&lt;/a&gt; for them.&lt;/p&gt;

&lt;p&gt;Thankfully there are many tools—with more arriving all the time—that automatically generate styleguides based directly upon the code you write. Recently I was tasked with creating a living styleguide by my employer and I decided to take a good look at my alternatives before starting. Following is a run down of the strengths and weaknesses of  various options. While I wasn&amp;#39;t able to investigate &lt;a href=&quot;http://vinspee.me/style-guide-guide/&quot;&gt;all of them&lt;/a&gt;, I think I covered a diverse group.&lt;/p&gt;

&lt;p&gt;It became clear in my research that there are two kinds of generators: some are better for designing while others are better for documenting. I&amp;#39;ve split them in to these two groups.&lt;/p&gt;

&lt;h2&gt;Generators for Designing&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re still trying things out, exploring, or designing in the browser these are the tools for you.&lt;/p&gt;

&lt;h3&gt;Pattern Lab&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://patternlab.io/&quot;&gt;Pattern Lab&lt;/a&gt; is built by &lt;a href=&quot;http://dmolsen.com/&quot;&gt;Dave Olson&lt;/a&gt; and &lt;a href=&quot;http://bradfrostweb.com/&quot;&gt;Brad Frost&lt;/a&gt; based upon Frost&amp;#39;s &lt;a href=&quot;http://bradfrostweb.com/blog/post/atomic-web-design/&quot;&gt;atomic design&lt;/a&gt; methodology. Atomic Design is a fantastic concept, starting out with that level of organization is big win. Pattern Lab comes out of the box with a pretty complete set of HTML elements to ensure you don&amp;#39;t forget anything when creating your base styles. That way when you actually need an HTML5 Range input down the line, you&amp;#39;re already covered.&lt;/p&gt;

&lt;p&gt;If you don&amp;#39;t like the idea of working with PHP there is also a Node version, but it&amp;#39;s apparently &lt;a href=&quot;https://twitter.com/brad_frost/status/457161455599910912&quot;&gt;behind&lt;/a&gt; in terms of features. Brad Frost has also documented his &lt;a href=&quot;https://gist.github.com/bradfrost/10906886&quot;&gt;typical Gruntfile&lt;/a&gt; for compiling Sass files in conjunction with Pattern lab.&lt;/p&gt;

&lt;h3&gt;Style Prototype&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Team-Sass/generator-style-prototype&quot;&gt;Style Prototype&lt;/a&gt; is built by &lt;a href=&quot;http://thecodingdesigner.com/&quot;&gt;Mason Wendell&lt;/a&gt; and &lt;a href=&quot;http://snugug.com/&quot;&gt;Sam Richard&lt;/a&gt; of &lt;a href=&quot;https://github.com/Team-Sass&quot;&gt;Team Sass&lt;/a&gt; and just might be the Cadillac of styleguide generators. Style Prototype projects are scaffolded with &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt; and include a wide arrary of features including (but not limited to) automatically generated &lt;a href=&quot;http://styletil.es/&quot;&gt;Style Tiles&lt;/a&gt;, &lt;a href=&quot;https://github.com/Team-Sass/generator-style-prototype#changing-version-number&quot;&gt;versioning&lt;/a&gt; for style, &lt;a href=&quot;https://github.com/Team-Sass/generator-style-prototype#exporting-final-site&quot;&gt;deployment&lt;/a&gt; to a preview server, and exportation of your finished product as a &lt;a href=&quot;https://github.com/Team-Sass/generator-style-prototype#creating-a-compass-extension&quot;&gt;Compass extension&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You will need to be pretty familiar with &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; as the .scss files—while intelligently organized—are a little tricky to wrap your head around at first. Style Prototype is probably the most fully featured of the generators, but it is also the most opinionated in terms of workflow and structure.&lt;/p&gt;

&lt;p&gt;Apparently &lt;a href=&quot;https://twitter.com/Snugug/status/457266943637348352&quot;&gt;2.0 is on the way&lt;/a&gt;, so keep a lookout.&lt;/p&gt;

&lt;h2&gt;Generators for Documenting&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re working with existing designs, sites, or patterns consider one of these:&lt;/p&gt;

&lt;h3&gt;Kalei, KSS, and Styledocco&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://kaleistyleguide.com/&quot;&gt;Kalei&lt;/a&gt;, &lt;a href=&quot;http://warpspire.com/kss/&quot;&gt;KSS&lt;/a&gt;, and &lt;a href=&quot;http://jacobrask.github.io/styledocco/&quot;&gt;StyleDocco&lt;/a&gt; are all pretty similar. They parse your preprocessed or plain old stylesheets for formatted documentation blocks and spit out a documentation site with a default style. These are definitely the quickest options for getting you up and running with a styleguide. Check &lt;a href=&quot;http://vinspee.me/style-guide-guide/&quot;&gt;The Style Guide Guide&lt;/a&gt; for their various technology stack compatibilities.&lt;/p&gt;

&lt;h3&gt;Hologram&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://trulia.github.io/hologram/&quot;&gt;Hologram&lt;/a&gt; came on my radar in the last hour of my search thanks to a tweet from &lt;a href=&quot;http://www.stubbornella.org/&quot;&gt;Nicole Sullivan&lt;/a&gt; and ended up winning me over.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;New talk about &lt;a href=&quot;https://twitter.com/search?q=%23hologram&amp;amp;src=hash&quot;&gt;#hologram&lt;/a&gt;, a style guide generator. With link to our live style guide! &lt;a href=&quot;https://twitter.com/search?q=%23bootstrap3&amp;amp;src=hash&quot;&gt;#bootstrap3&lt;/a&gt; &lt;a href=&quot;http://t.co/2BoR3LDOt8&quot;&gt;http://t.co/2BoR3LDOt8&lt;/a&gt; /w Colin O&amp;#39;Byrne&lt;/p&gt;&amp;mdash; Nicole Sullivan (@stubbornella) &lt;a href=&quot;https://twitter.com/stubbornella/statuses/439078802019196929&quot;&gt;February 27, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Built by the developer team at &lt;a href=&quot;https://github.com/trulia&quot;&gt;Trulia&lt;/a&gt;, Hologram is simple, flexible, and customizable. It comes with no boilerplate markup or default style, but it does come with the ability to parse the &lt;a href=&quot;https://github.com/trulia/hologram#supported-preprocessorsfile-types&quot;&gt;widest variety&lt;/a&gt; of file types of any of the generators listed. Hologram works with Markdown, Javascript, and most of the popular CSS Preprocessors. Hologram combs a specified directory for formatted documentation blocks in any compatible file types and allows you to configure your documentation as you see fit using categories and subcategories specified in &lt;a href=&quot;https://github.com/trulia/hologram#document-yaml-section&quot;&gt;YAML&lt;/a&gt; (similar to &lt;a href=&quot;http://jekyllrb.com/docs/frontmatter/&quot;&gt;Jekyll Front-matter&lt;/a&gt;). This means you can document front end patterns that exist outside of your CSS (e.g. Javascript photo gallery or pop-up).&lt;/p&gt;

&lt;p&gt;Because of it&amp;#39;s simplicity, Hologram is easy to integrate in to your project or workflow. You can see how I&amp;#39;ve integrated Hologram in to my grunt workflow &lt;a href=&quot;https://github.com/natgeo/mortar/blob/develop/gruntfile.coffee&quot;&gt;on github&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I ended up using Hologram because of my task at hand (documenting a design that was mostly complete) and my tendency as a developer to want the ability to customize, but all of the options have serious strengths. I suggest you take at least two for a spin before heading too far down one path as you may discover features that are missing or undesirable. Hopefully this comparison helps to point you in the right direction. Good luck!&lt;/p&gt;
</description>
				<pubDate>Sun, 20 Apr 2014 00:00:00 -0400</pubDate>
				
        <link>http://xiw.cx/1fcdga5</link>
				<guid isPermaLink="true">http://xiw.cx/1fcdga5</guid>
			</item>
		
			<item>
				<title>Responsive Typographic Modular Scale with Sass</title>
				<description>&lt;p&gt;I was relieved when I first came across &lt;a href=&quot;http://tbrown.org/&quot;&gt;Tim Brown&lt;/a&gt;&amp;#39;s &lt;a href=&quot;http://vimeo.com/17079380&quot;&gt;talk&lt;/a&gt; on typographic modular scale and his &lt;a href=&quot;http://modularscale.com/&quot;&gt;accompanying tool&lt;/a&gt;. For a non-designer like me, it takes the guess work out of deciding upon font sizes. &lt;a href=&quot;https://github.com/Team-Sass/&quot;&gt;Team Sass&lt;/a&gt;&amp;#39;s &lt;a href=&quot;http://scottkellum.com/&quot;&gt;sass plugin&lt;/a&gt; makes using a modular scale even easier.&lt;/p&gt;

&lt;p&gt;This is all fantastic and gets you most of the way there, but the problem is that most modular scales get big pretty quickly and top level headings are then too large for small screens. You can give headings smaller sizes for smaller screens in an ad-hoc fashion, but that seemed a bit too hacky of a solution for me. I&amp;#39;d been kicking around an idea to have a different scale for small screens that doesn&amp;#39;t grow as dramatically and with the help of &lt;a href=&quot;http://sassmeister.com&quot;&gt;Sassmeister&lt;/a&gt; I made a &lt;a href=&quot;http://sassmeister.com/gist/9749589&quot;&gt;working example&lt;/a&gt; of this idea. Following is a step by step breakdown of the code from this example.&lt;/p&gt;

&lt;p&gt;First you&amp;#39;ll need to specify your &lt;a href=&quot;https://github.com/Team-Sass/modular-scale#usage&quot;&gt;default&lt;/a&gt; modular scale settings:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;scss language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;   :&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;  :&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fourth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Followed by your default scale variables:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;scss language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ms-norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;     :&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-med&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;      :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-lrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;      :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-xlrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;     :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-xxlrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;    :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-xxxlrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;   :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Typically, it is best to  design things mobile first, but in this instance the small screens are the exception. It really doesn&amp;#39;t matter which you consider your &amp;quot;default&amp;quot;, and using this idea there can be as many different scales for screen sizes as the design calls for and any scale could be considered the default.&lt;/p&gt;

&lt;p&gt;In this example I stuck with the &lt;code&gt;ms&lt;/code&gt; namespace for variables even though these aren&amp;#39;t official Modular Scale settings. You&amp;#39;ll want to pass the modular scale variable in to another variable so it can be easily changed when you set up the small screen scale:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;scss language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ms-smscr-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$minor-third&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ms-smscr-norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;     :&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-smscr-med&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;      :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-smscr-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-smscr-lrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;      :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-smscr-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-smscr-xlrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;     :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-smscr-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-smscr-xxlrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;    :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-smscr-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ms-smscr-xxxlrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;   :&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-smscr-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In my sassmeister example I set the font-sizes directly on heading elements, in a real project you mighty want to set up an array of &lt;a href=&quot;http://sass-lang.com/documentation/file.SASS_REFERENCE.html#placeholder_selectors_&quot;&gt;placeholder selectors&lt;/a&gt; that look something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;scss language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-size-med&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-smscr-med&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ms-med&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An example that utilizes &lt;a href=&quot;http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps&quot;&gt;Sass Maps&lt;/a&gt;, the &lt;a href=&quot;http://breakpoint-sass.com/&quot;&gt;Breakpoint&lt;/a&gt; plugin, and Compass&amp;#39; &lt;a href=&quot;http://compass-style.org/reference/compass/typography/vertical_rhythm/&quot;&gt;vertical rhythm&lt;/a&gt; looks something like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;scss language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$sizes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ms-lrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ms-smscr-lrg&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;med&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ms-med&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ms-smscr-med&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ms-norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ms-smscr-norm&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@each&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;sizes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-size-&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@include&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt; adjust-font-size-to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;@include&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt; breakpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bp-sm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;@include&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt; adjust-font-size-to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Declaring the media query in the placeholder selector gets around the &lt;a href=&quot;https://github.com/nex3/sass/issues/1050&quot;&gt;current inability&lt;/a&gt; to extend from within media queries in Sass. This will provide you with placeholder selectors for font size that can be mixed and matched with placeholder selector for font style like so:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;scss language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.subhh2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@extend&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-alternate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-size-xlrg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviously this doesn&amp;#39;t cover all use cases, there are some instances in which you might want a font&amp;#39;s size to change at a different rate or screen size than all of the other fonts, but I think this is a good way to quickly set up something very &lt;abbr title=&quot;Don&#39;t Repeat Yourself&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Don&amp;#x27;t_repeat_yourself&quot;&gt;DRY&lt;/a&gt;&lt;/abbr&gt;, flexible, and easily altered.&lt;/p&gt;
</description>
				<pubDate>Wed, 09 Apr 2014 00:00:00 -0400</pubDate>
				
        <link>http://xiw.cx/PlTlyP</link>
				<guid isPermaLink="true">http://xiw.cx/PlTlyP</guid>
			</item>
		
			<item>
				<title>Developing Locally with Typekit, Xip.io, and Browsersync</title>
				<description>&lt;p&gt;Recently I ran in to an interesting problem. When you initialize a new &amp;quot;kit&amp;quot; on &lt;a href=&quot;http://typekit.com&quot;&gt;typekit&lt;/a&gt; you are prompted to enter a list of domains that your kit will be allowed to function properly on. Typically you would enter the address of your live site (e.g. &lt;code&gt;&amp;#39;http://example.com&amp;#39;&lt;/code&gt;) as well as an address for local testing (e.g. &lt;code&gt;&amp;#39;192.168.1.10&amp;#39;&lt;/code&gt; or &lt;code&gt;&amp;#39;localhost&amp;#39;&lt;/code&gt;). Neither of these options for local development worked for me. Managing a list of &lt;abbr title=&quot;Local Area Network&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Local_area_network&quot;&gt;LAN&lt;/a&gt;&lt;/abbr&gt; addresses would be foolish (and probably impossible) on a large team where people are working from different locations. Simply stating &lt;code&gt;localhost&lt;/code&gt; would prevent fonts from being previewed on other devices with a tool like &lt;a href=&quot;http://browsersync.io/&quot;&gt;BrowserSync&lt;/a&gt;, &lt;a href=&quot;http://vanamco.com/ghostlab&quot;&gt;Ghostlab&lt;/a&gt;, or &lt;a href=&quot;http://html.adobe.com/edge/inspect&quot;&gt;Adobe Edge Inspect&lt;/a&gt; which all rely on your computer&amp;#39;s LAN address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/typekit-create.png&quot; alt=&quot;Typekit kit creation prompt&quot;&gt;&lt;/p&gt;

&lt;p&gt;In my moment of need I turned to twitter and thankfully &lt;a href=&quot;http://chipcullen.com&quot;&gt;Chip Cullen&lt;/a&gt; answered my call:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/xiwcx&quot;&gt;@xiwcx&lt;/a&gt; have you checked out &lt;a href=&quot;http://t.co/COgpA7CL5V&quot;&gt;http://t.co/COgpA7CL5V&lt;/a&gt;? Just include *.xip.io in your kit setup.&lt;/p&gt;&amp;mdash; Chip Cullen (@chipcullen) &lt;a href=&quot;https://twitter.com/chipcullen/statuses/440623861043052544&quot;&gt;March 3, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Some of the developers at &lt;a href=&quot;https://37signals.com&quot;&gt;37signals&lt;/a&gt; developed a custom DNS tool named &lt;a href=&quot;http://xip.io&quot;&gt;xip.io&lt;/a&gt; to deal with similar problems. You can use xip to &amp;quot;trick&amp;quot; your browser in to thinking an address like &lt;code&gt;www.10.5.3.15.xip.io&lt;/code&gt; or  &lt;code&gt;10.5.3.15.xip.io&lt;/code&gt; is &lt;code&gt;10.5.3.15&lt;/code&gt;. All you have to do after this is add &lt;code&gt;*.xip.io&lt;/code&gt; to your typekit &amp;quot;kit&amp;quot; settings and you&amp;#39;re good to go.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/typekit-settings.png&quot; alt=&quot;Typekit kit creation prompt&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Bonus&lt;/h2&gt;

&lt;p&gt;After solving this, I discovered I was running in to another problem: the &lt;code&gt;.xip.io&lt;/code&gt; suffix was interfering with live reloading in Browsersync (my preferred device syncing tool: fully featured, open source, *nix agnostic). &lt;a href=&quot;http://shakyshane.com&quot;&gt;Shane Osborne&lt;/a&gt;, the maintainer of Browsersync &lt;a href=&quot;https://github.com/shakyShane/grunt-browser-sync/issues/41#issuecomment-37136050&quot;&gt;responded to my feature request very promptly&lt;/a&gt; and there is now an option to append whatever suffix you like to your IP address. Here is an example of adding the option to your &lt;a href=&quot;http://gruntjs.com/sample-gruntfile&quot;&gt;gruntfile&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;coffee language-coffee&quot; data-lang=&quot;coffee&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;browserSync:&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;serve:&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;options:&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;hostnameSuffix: &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.xip.io&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Sun, 23 Mar 2014 00:00:00 -0400</pubDate>
				
        <link>http://xiw.cx/PlTlyN</link>
				<guid isPermaLink="true">http://xiw.cx/PlTlyN</guid>
			</item>
		
	</channel>
</rss>
